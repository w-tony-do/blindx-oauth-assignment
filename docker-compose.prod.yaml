networks:
  blindx-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-blindx
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: blinx
      POSTGRES_PASSWORD: blinx_password
      POSTGRES_DB: blinx_signaturerx
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blindx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blinx"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass blinx_redis_password
    expose:
      - 6379
    volumes:
      - redis_data:/data
    networks:
      - blindx-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "blinx_redis_password", "ping"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  # Prescription Backend Service
  prescription:
    image: blindx-prescription:latest
    build:
      context: .
      dockerfile: ./api.dockerfile
    container_name: blindx-prescription
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://blinx:blinx_password@postgres:5432/blinx_signaturerx
      REDIS_URL: redis://:blinx_redis_password@redis:6379
      SIGNATURERX_CLIENT_ID: ${SIGNATURERX_CLIENT_ID}
      SIGNATURERX_CLIENT_SECRET: ${SIGNATURERX_CLIENT_SECRET}
      SIGNATURERX_BASE_URL: ${SIGNATURERX_BASE_URL:-https://app.signaturerx.co.uk}
      SIGNATURERX_MOCK: ${SIGNATURERX_MOCK:-true}
      SIGNATURERX_CLINIC_ID: ${SIGNATURERX_CLINIC_ID:-842}
      TOKEN_CHECK_INTERVAL_MINUTES: ${TOKEN_CHECK_INTERVAL_MINUTES:-5}
    expose:
      - 3001
    networks:
      - blindx-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3001/api/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1); })",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Database Migration Runner (runs once)
  migration:
    image: blindx-prescription:latest
    container_name: blindx-migration
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://blinx:blinx_password@postgres:5432/blinx_signaturerx
    command: node migrate.js
    networks:
      - blindx-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:
  redis_data:
